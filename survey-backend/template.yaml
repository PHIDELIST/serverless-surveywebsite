AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  survey-backend

  Sample SAM Template for survey-backend

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  SurveysTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: surveys-table
      AttributeDefinitions:
        - AttributeName: admin_id
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: admin_id
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  GetSurveys:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/survey-api/functions/get-surveys/
      Handler: app.getSurveys
      Runtime: nodejs18.x
      Environment:
        Variables:
          SURVEY_TABLE: !Ref SurveysTable
      Policies:
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:Query 
              - dynamodb:Scan
            Resource:
              - !Sub 
                - 'arn:aws:dynamodb:*:*:table/${Table}'
                - { Table: !Ref SurveysTable }
          - Effect: Allow
            Action:
              - logs:*
            Resource:
              - "*"  
  PostSurveys:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/survey-api/functions/post-surveys/
      Handler: app.postSurveys
      Runtime: nodejs18.x
      Environment:
        Variables:
          SURVEY_TABLE: !Ref SurveysTable
      Policies:
        Statement:
          - Effect: Allow
            Action: 
              - dynamodb:PutItem
            Resource:
              - !Sub
                - 'arn:aws:dynamodb:*:*:table/${Table}' 
                - {Table: !Ref SurveysTable}
          - Effect: Allow
            Action:
              - log:*
            Resource:
              - "*" 
  SurveyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Cors:
        AllowMethods: "'POST, GET, UPDATE, DELETE'"
        AllowHeaders: "'X-Forwarded-For'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
      DefinitionBody:
        "Fn::Transform":
          Name: "AWS::Include"
          Parameters:
            Location: "./api.yaml"

  ApiGwExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "apigateway.amazonaws.com"
                - "lambda.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"

  ApiGwExecutionPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "apigw-execution-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - lambda:*
            
            Resource:
              - !GetAtt GetSurveys.Arn
      Roles:
        - Ref: "ApiGwExecutionRole"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DynamoDBTableName:
    Description: "DynamoDB Table Name"
    Value: !Ref SurveysTable
  GetSurveys:
    Description: "GetSurveys Lambda Functions ARN"
    Value: !GetAtt GetSurveys.Arn
  SurveyApiEndpoint:
    Description: "API Gateway endpoint URL for Dev stage for Survey Get function"
    Value: !Sub "https://${SurveyApi}.execute-api.us-east-1.amazonaws.com/Dev/surveys/"
